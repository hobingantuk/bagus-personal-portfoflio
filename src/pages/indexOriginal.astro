---
import '../styles/global.css';
// Component Imports
import ButtonOriginal from '../components/Button.astro';
import {Button} from '../components/ui/shadcn-custom-button'
import {ModeToggle} from '../components/ModeToggle'

// Full Astro Component Syntax:
// https://docs.astro.build/basics/astro-components/
---


<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro + TailwindCSS</title>
	</head>

	<body>
		<div class="grid place-items-center h-screen content-center">
			<ButtonOriginal>Tailwind Button in Astro!</ButtonOriginal>
			<a href="/markdown-page" class="p-4 underline">Markdown is also supported...</a>
			<div class="mb-2"> 
			<Button>Test ShadCN</Button>
		</div>
			<ModeToggle client:load />
		</div>
	</body>
</html>



<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>


