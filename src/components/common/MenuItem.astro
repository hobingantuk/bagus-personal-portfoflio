<!-- ---
interface Props {
  text: string;
  link: string;
}

const pathname = new URL(Astro.request.url).pathname;
const { text, link } = Astro.props;
const isActive = pathname.replace(/\/$/, '') === link.replace(/\/$/, '');
---

<li>
    <a href={link} aria-label={text} 
      class={`relative text-lg font-semibold transition group
      ${isActive ? "text-primary before:absolute before:inset-0 before:-z-10 before:blur-[10px] before:content-[''] before:bg-primary/30" 
                 : "text-white hover:text-primary hover:before:absolute hover:before:inset-0 hover:before:-z-10 hover:before:blur-[12px] hover:before:content-[''] hover:before:bg-primary/40"}`}>
      {text}
      <span class="absolute left-0 bottom-0 h-[2px] w-0 bg-primary transition-all duration-300 group-hover:w-full"></span>
    </a>
  </li> -->

  <!-- ---
interface Props {
  text: string;
  link: string;
}

const pathname = new URL(Astro.request.url).pathname;
const { text, link } = Astro.props;
const isActive = pathname.replace(/\/$/, '') === link.replace(/\/$/, '');
---

<li>
  <a href={link} aria-label={text} class={`link group ${isActive ? 'active' : ''}`}>
    <span class="link--top">{text}</span>
    <span class="link--bottom">{text}</span>
  </a>
</li>

<style>
/* Base link styles */
.link {
  position: relative;
  display: inline-block;
  text-decoration: none;
  line-height: 1em;
  padding: 0;
  font-size: 1.125rem; /* text-lg */
  font-weight: 600; /* font-semibold */
  transition: all 0.3s ease-in-out;
}

/* Top half of the text */
.link--top {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  color: white;
  clip-path: polygon(0% 66%, 0% 0%, 100% 0%, 100% 40%);
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1), color 0.5s ease;
}

.link--top:after {
  content: "";
  position: absolute;
  top: 36%;
  left: 0;
  width: 100%;
  height: 4%;
  background: #f2de9b; /* Custom primary color */
  transform: rotateZ(-2.2deg) scaleX(0%);
  transform-origin: right top;
  transition: transform 0.2s ease;
}

/* Bottom half of the text */
.link--bottom {
  display: inline-block;
  clip-path: polygon(0% 65%, 100% 40%, 100% 110%, 0% 110%);
  text-decoration: none;
  color: white;
  transition: color 0.5s ease, background-position 0.2s ease;
  background-size: 200% 8%;
  background-position: left bottom;
  background-repeat: no-repeat;
  background-image: linear-gradient(to right, #f2de9b 50%, transparent 50%);
}

/* Underline effect */
.link--bottom:after {
  content: "";
  position: absolute;
  top: 40%;
  left: 0;
  width: 100%;
  height: 4%;
  background: #f2de9b;
  transform: rotateZ(-2deg) scaleX(0%);
  transform-origin: right top;
  transition: transform 0.2s ease;
}

/* Hover Effects */
.link:hover .link--top {
  color: #f2de9b;
  transform: translateY(-0.5em) rotateZ(-3deg);
  transition: transform 0.5s cubic-bezier(.12,.8,.57,1.00), color 0.5s ease;
}

.link:hover .link--bottom {
  color: #f2de9b;
  background-position: 100% bottom;
  transition: color 0.5s ease, background-position 0.2s ease;
}

.link:hover .link--top:after {
  top: 62%;
  transform-origin: left top;
  transform: rotateZ(-2.2deg) scaleX(100%);
}

.link:hover .link--bottom:after {
  top: 65%;
  transform-origin: left top;
  transform: rotateZ(-2.1deg) scaleX(100%);
}

/* Active state */
.link.active .link--top,
.link.active .link--bottom {
  color: #f2de9b;
}
</style> -->

---
interface Props {
  text: string;
  link: string;
}

const pathname = new URL(Astro.request.url).pathname;
const { text, link } = Astro.props;
const isActive = pathname.replace(/\/$/, '') === link.replace(/\/$/, '');
---

<li>
  <a href={link} aria-label={text} class={`link group ${isActive ? 'active' : ''}`}>
    <span class="link--top font-matisse-standard">{text}</span>
    <span class="link--bottom font-matisse-classic ">{text}</span>
  </a>
</li>

<style>
/* Base link styles */
.link {
  position: relative;
  display: inline-block;
  text-decoration: none;
  line-height: 1em;
  padding: 0;
  font-size: 1.125rem; /* text-lg */
  font-weight: 600; /* font-semibold */
  transition: all 0.3s ease-in-out;
}

/* Top half of the text */
.link--top {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  color: white;
  clip-path: polygon(0% 66%, 0% 0%, 100% 0%, 100% 40%);
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1), color 0.5s ease;
}

/* Top half underline */
.link--top:after {
  content: "";
  position: absolute;
  top: 36%;
  left: 0;
  width: 100%;
  height: 4%;
  background: #f2de9b; /* Primary hover color */
  transform: rotateZ(-2.2deg) scaleX(0%);
  transform-origin: right top;
  transition: transform 0.2s ease;
}

/* Bottom half of the text */
.link--bottom {
  display: inline-block;
  clip-path: polygon(0% 65%, 100% 40%, 100% 110%, 0% 110%);
  text-decoration: none;
  color: white;
  transition: color 0.5s ease, background-position 0.2s ease;
  background-size: 200% 8%;
  background-position: left bottom;
  background-repeat: no-repeat;
  background-image: linear-gradient(to right, #f2de9b 50%, transparent 50%);
}

/* Bottom underline effect */
.link--bottom:after {
  content: "";
  position: absolute;
  top: 40%;
  left: 0;
  width: 100%;
  height: 4%;
  background: #f2de9b;
  transform: rotateZ(-2deg) scaleX(0%);
  transform-origin: right top;
  transition: transform 0.2s ease;
}

/* === Hover Effects === */
.link:hover .link--top {
  color: #f2de9b;
  transform: translateY(-0.5em) rotateZ(-3deg);
  transition: transform 0.5s cubic-bezier(.12,.8,.57,1.00), color 0.5s ease;
}

.link:hover .link--bottom {
  color: #f2de9b;
  background-position: 100% bottom;
  transition: color 0.5s ease, background-position 0.2s ease;
}

.link:hover .link--top:after {
  top: 62%;
  transform-origin: left top;
  transform: rotateZ(-2.2deg) scaleX(100%);
}

.link:hover .link--bottom:after {
  top: 65%;
  transform-origin: left top;
  transform: rotateZ(-2.1deg) scaleX(100%);
}

/* === Active State Animation (Keeps Hovered Look) === */
.link.active .link--top {
  color: #f2de9b;
  transform: translateY(-0.5em) rotateZ(-3deg);
}

.link.active .link--bottom {
  color: #f2de9b;
  background-position: 100% bottom;
}

.link.active .link--top:after {
  top: 62%;
  transform-origin: left top;
  transform: rotateZ(-2.2deg) scaleX(100%);
}

.link.active .link--bottom:after {
  top: 65%;
  transform-origin: left top;
  transform: rotateZ(-2.1deg) scaleX(100%);
}

/* === Exit Animation: Reverse the hover effect when leaving the page === */
.link:not(.active):not(:hover) .link--top {
  color: white;
  transform: translateY(0) rotateZ(0);
  transition: transform 0.3s ease-in-out, color 0.3s ease-in-out;
}

.link:not(.active):not(:hover) .link--bottom {
  color: white;
  background-position: left bottom;
  transition: color 0.3s ease-in-out, background-position 0.3s ease-in-out;
}

.link:not(.active):not(:hover) .link--top:after {
  top: 36%;
  transform: rotateZ(-2.2deg) scaleX(0%);
}

.link:not(.active):not(:hover) .link--bottom:after {
  top: 40%;
  transform: rotateZ(-2.1deg) scaleX(0%);
}
</style>